name: Build & Deploy Microservices App

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
jobs:
  build-deploy:
    name: Build & Deploy Spring boot Microservice App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17


      - name: Test & Build Config Service
        run: |
          mvn -B test --file pom.xml 
          mvn clean package -DskipTests
        working-directory: ./gpao-tex-core/config-server

      - name: Test & Build Discovery Service
        run: |
          mvn -B test --file pom.xml
          mvn clean package -DskipTests
        working-directory: ./gpao-tex-core/discovery

      - name: Test & Build Gateway Service
        run: |
          mvn clean package -DskipTests
        working-directory: ./gpao-tex-core/gateway

      - name: Test & Build Ordre Service
        run: |
          mvn -B test --file pom.xml
          mvn clean package -DskipTests
        working-directory: ./gpao-tex-core/ordre

      - name: Test & Build Partie Prenant Service
        run: |
          mvn -B test --file pom.xml
          mvn clean package -DskipTests
        working-directory: ./gpao-tex-core/partie-prenante

      - name: Test & Build Produit Service
        run: |
          mvn -B test --file pom.xml 
          mvn clean package -DskipTests
        working-directory: ./gpao-tex-core/produit

      - name: Test & Build Production Service
        run: |
          mvn -B test --file pom.xml
          mvn clean package -DskipTests
        working-directory: ./gpao-tex-core/production

      # Docker login step (if necessary for private repositories)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN

      # Build Docker images for each service
#      - name: Build Docker Image for Config Service
#        uses: docker/build-push-action@v2
#        with:
#          context: ./gpao-tex-core/config-server
#          file: ./gpao-tex-core/config-server/Dockerfile
#          push: false
#          tags: your-dockerhub-username/gpro-config-service:latest

      - name: Build Docker images
        run: |
          docker build -t $DOCKER_HUB_USERNAME/gpro-config-service:latest ./gpao-tex-core/config-server
          docker build -t $DOCKER_HUB_USERNAME/gpro-discovery-service:latest ./gpao-tex-core/discovery-service
      
      - name: Push Docker images
        run: |
          docker push $DOCKER_HUB_USERNAME/gpro-config-service:latest
          docker push $DOCKER_HUB_USERNAME/gpro-discovery-service:latest

#      # Push Docker Image to Docker Hub
#      - name: Push Docker Image for Config Service to Docker Hub
#        uses: docker/build-push-action@v2
#        with:
#          context: ./gpao-tex-core/config-server
#          file: ./gpao-tex-core/config-server/Dockerfile
#          push: true
#          tags: your-dockerhub-username/gpro-config-service:latest























#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#env:
#  DOCKER_HUB_USERNAME: oussamatouati
#  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      - name: Build microservices
#        run: ./mvnw clean install -DskipTests
#
#      - name: Build Docker images
#        run: |
#          docker build -t $DOCKER_HUB_USERNAME/config-service:latest ./config-service
#          docker build -t $DOCKER_HUB_USERNAME/discovery-service:latest ./discovery-service
#          docker build -t $DOCKER_HUB_USERNAME/gateway:latest ./gateway
#          docker build -t $DOCKER_HUB_USERNAME/ordre-service:latest ./ordre-service
#          docker build -t $DOCKER_HUB_USERNAME/produit-service:latest ./produit-service
#          docker build -t $DOCKER_HUB_USERNAME/production-service:latest ./production-service
#          docker build -t $DOCKER_HUB_USERNAME/partie-prenante-service:latest ./partie-prenante-service
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ env.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Push Docker images
#        run: |
#          docker push $DOCKER_HUB_USERNAME/config-service:latest
#          docker push $DOCKER_HUB_USERNAME/discovery-service:latest
#          docker push $DOCKER_HUB_USERNAME/gateway:latest
#          docker push $DOCKER_HUB_USERNAME/ordre-service:latest
#          docker push $DOCKER_HUB_USERNAME/produit-service:latest
#          docker push $DOCKER_HUB_USERNAME/production-service:latest
#          docker push $DOCKER_HUB_USERNAME/partie-prenante-service:latest