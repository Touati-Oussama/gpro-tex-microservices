#name: Build & Deploy Microservices App
#
#on:
#  push:
#    branches:
#      - main
#jobs:
#  build-deploy:
#    name: Build & Deploy Spring boot Microservice App
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: 17
#
#      - name: Test & Build All Services
#        run: |
#          for service in config-server discovery gateway ordre partie-prenante produit production; do
#            echo "Building $service"
#            mvn -B test --file ./gpao-tex-core/$service/pom.xml
#            mvn clean package -DskipTests --file ./gpao-tex-core/$service/pom.xml
#          done
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN}}
#
#
#      - name: Build Docker images
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-config-service:latest ./gpao-tex-core/config-server
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-discovery-service:latest ./gpao-tex-core/discovery
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-gateway-service:latest ./gpao-tex-core/gateway          
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-ordre-service:latest ./gpao-tex-core/ordre
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-produit-service:latest ./gpao-tex-core/produit
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-production-service:latest ./gpao-tex-core/production
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-partie-prenante-service:latest ./gpao-tex-core/partie-prenante
#
#      - name: Push Docker images
#        run: |
#          docker push ${{ secrets.DOCKER_USERNAME }}/gpro-config-service:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/gpro-discovery-service:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/gpro-gateway-service:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/gpro-ordre-service:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/gpro-produit-service:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/gpro-production-service:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/gpro-partie-prenante-service:latest
#



name: Build & Deploy Microservices App

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build & Deploy Spring Boot Microservice App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Determine Changed Microservices
        id: changes
        run: |
          echo "Changed microservices:"
          for service in config-server discovery gateway ordre partie-prenante produit production; do
            if git diff --name-only HEAD HEAD~1 | grep -q "gpao-tex-core/$service"; then
              echo "$service"
              echo "::set-output name=services::$service"
            fi
          done

      - name: Set Matrix Services
        run: |
          if [ -z "${{ steps.changes.outputs.services }}" ]; then
            echo "No microservices changed, skipping build."
            exit 0
          fi
        env:
          SERVICES: ${{ steps.changes.outputs.services }}

      - name: Log in to Docker Hub
        if: env.SERVICES != ''
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build & Push Changed Docker Images
        if: env.SERVICES != ''
        run: |
          for service in $SERVICES; do
            echo "Building and pushing $service"
            mvn -B test --file ./gpao-tex-core/$service/pom.xml
            mvn clean package -DskipTests --file ./gpao-tex-core/$service/pom.xml
            docker build -t ${{ secrets.DOCKER_USERNAME }}/gpro-$service:latest ./gpao-tex-core/$service
            docker push ${{ secrets.DOCKER_USERNAME }}/gpro-$service:latest
          done
